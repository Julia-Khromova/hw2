'''
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

catalog = [10, -20, "Frog", [4, 5], None]

for catalog_type in catalog:
    print(type(catalog_type))
    
    '''
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
'''

senorita = [list(i) for i in input("Введите имена >>> ".split())]

for i in range(1, len(senorita), 2):
    senorita[i - 1], senorita[i] = senorita[i], senorita[i - 1]

print(' '.join([str(i) for i in senorita]))
print(type(senorita))

'''
3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.
'''

month = int(input("Введите число месяца: "))
seasons = ["зима", "весна", "лето", "осень"] #list
time_year = {1 : "зима", 2 : "весна", 3 : "лето", 4 : "осень"} #dict

if month == 12 or month == 1 or month == 2:
    print(seasons[0])
    print(time_year.get(1))
elif month == 3 or month == 4 or month == 5:
    print(seasons[1])
    print(time_year.get(2))
elif month == 6 or month == 7 or month == 8:
    print(seasons[2])
    print(time_year.get(3))
elif month == 9 or month == 10 or month == 11:
    print(seasons[3])
    print(time_year.get(4))
else: print("Вы ввели неверное значение")

'''
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
'''
user_line = str(input("Введите текст >>> "))

for i in user_line.split(' '):
  if(len(i) > 10):
    print('%s\r\n%s' % (i[:10], i[11:]))
    continue
  print(i)
  
  '''
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
'''

my_list = [7, 5, 3, 3, 2]
print("Текущий рейтинг: ", my_list, "Для завершения введите 0")
user_num = int(input("Введите новое значение: "))

while user_num != 0:
    for el in range(len(my_list)):
        if my_list[el] == user_num:
            my_list.insert(el + 1, user_num)
            break
        elif my_list[0] < user_num:
            my_list.insert(0, user_num)
        elif my_list[-1] > user_num:
            my_list.append(user_num)
        elif my_list[el] > user_num and my_list[el + 1] < user_num:
            my_list.insert(el + 1, user_num)
    print(f"текущий список - {my_list}")
    user_num = int(input("Введите новое значение "))
    
    '''
6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:

[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:

{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

goods = int(input("Введите количество товара "))
n = 1
my_dict = []
my_list = []
my_analys = {}
while n <= goods:
    my_dict = dict({'название': input("введите название "), 'цена': input("Введите цену "),
                    'количество': input('Введите количество '), 'eд': input("Введите единицу измерения ")})
    my_list.append((n, my_dict))
    n += 1
    my_analys = dict(
        {'название': my_dict.get('название'), 'цена': my_dict.get('цена'), 'количество': my_dict.get('количество'),
         'ед': my_dict.get('ед')})
print(my_list)
print(my_analys)
